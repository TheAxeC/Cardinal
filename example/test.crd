
//import "../standardLibrary/compiler/compiler" for Compiler
import "../standardLibrary/compiler/lexer" for Lexer


var source =
"var break << ( 
) 
/* /* */
abba "
var lex = Lexer::Parser.new(source, "", null)

IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")
IO.println("-", lex.nextToken().type.id, "-")